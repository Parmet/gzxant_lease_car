#set ($serviceAttr = $table.serviceImplName.substring(0,1).toLowerCase() + $table.serviceImplName.substring(1,$table.serviceImplName.length())) 
#set ($requestMapping = "")
#foreach($name in $table.name.split('_'))
	#set ($requestMapping = $requestMapping + "/" + $name)
#end
package ${package.Controller};

import java.util.List;
import org.apache.commons.lang3.StringUtils;

import org.springframework.beans.factory.annotation.Autowired;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.gzxant.annotation.SLog;
import com.gzxant.base.entity.ReturnDTO;
import com.gzxant.base.vo.DataTable;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${table.entityName};
import com.gzxant.util.ReturnDTOUtil;
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import io.swagger.annotations.ApiOperation;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("${requestMapping}")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
	@Autowired
	private ${table.serviceName} ${serviceAttr};

	@ApiOperation(value = "进入$!{table.comment}列表界面", notes = "进入$!{table.comment}列表界面")
	@GetMapping(value = "")
	public String list(Model model) {
		return "${requestMapping}/list";
	}

	@ApiOperation(value = "进入$!{table.comment}编辑界面", notes = "进入$!{table.comment}编辑界面")
	@GetMapping(value = {"/{action}", "/{action}/{id}"})
	public String detail(@PathVariable("action") String action,
	                     @PathVariable(value = "id" ,required = false) String id,
	                     Model model) {
		model.addAttribute("action", action);
		if (StringUtils.isNotBlank(id)) {
            model.addAttribute("entity", ${serviceAttr}.selectById(id));
		}

		return "${requestMapping}/" + action;
	}

	@ApiOperation(value = "获取$!{table.comment}列表数据", notes = "获取$!{table.comment}列表数据:使用约定的DataTable")
	@PostMapping(value = "/list")
	@ResponseBody
	public DataTable<${table.entityName}> list(@RequestBody DataTable<${table.entityName}> dt) {
		return ${serviceAttr}.pageSearch(dt);
	}

	@ApiOperation(value = "添加$!{table.comment}", notes = "添加$!{table.comment}")
	@PostMapping(value = "/insert")
	@ResponseBody
	public ReturnDTO insert(${table.entityName} param) {
		${serviceAttr}.insert(param);
		return ReturnDTOUtil.success();
	}

	@ApiOperation(value = "编辑$!{table.comment}", notes = "编辑$!{table.comment}")
	@PostMapping(value = "/update")
	@ResponseBody
	public ReturnDTO update(${table.entityName} param) {
		${serviceAttr}.updateById(param);
		return ReturnDTOUtil.success();
	}

	@SLog("批量删除$!{table.comment}")
	@ApiOperation(value = "批量删除$!{table.comment}", notes = "批量删除$!{table.comment}")
	@PostMapping(value = "/delete")
	@ResponseBody
	public ReturnDTO delete(@RequestParam("ids") List<Long> ids) {
		boolean success = ${serviceAttr}.deleteBatchIds(ids);
		if (success) {
			return ReturnDTOUtil.success();
		}
		return ReturnDTOUtil.fail();
	}
}
